---
import Button from "./ui/Button.astro";
---

<form id="shortener-form">
  <input
    id="url-input"
    name="url"
    type="text"
    placeholder="Enter your URL here"
  />
  <Button class="shorten-submit-button">Shorten URL</Button>
</form>

<dialog id="success-modal">
  <h3>Success!!</h3>
  <p>Your new SMOL url is available now at:</p>
  <p><a id="shortUrl" href="#shortUrlGoesHere">#shortUrlGoesHere</a></p>
  <Button class="modal-close">Close</Button>
</dialog>

<script>
  const SHORTENER_URL_BASE = "https://url-shortener-yhpv.onrender.com";

  // Wake up the service
  fetch(SHORTENER_URL_BASE);

  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById(
      "shortener-form"
    ) as HTMLFormElement | null;
    const dialog = document.getElementById(
      "success-modal"
    ) as HTMLDialogElement | null;
	// On Form Submit:
    form?.addEventListener("submit", (event) => {
      event.preventDefault();
      const formData = new FormData(form);
      const url = formData.get("url") as string;
      if (!url) return;
      shortenUrl(url).then((result) => {
        console.log(result);
        const shortUrlLinkElement = document.getElementById(
          "shortUrl"
        ) as HTMLAnchorElement | null;
        if (!dialog || !shortUrlLinkElement) return;
        shortUrlLinkElement.setAttribute("href", result.shortUrl);
        shortUrlLinkElement.textContent = result.shortUrl;
        dialog.showModal();
      });
    });
    const closeModalButton = document.querySelector(".modal-close");
    closeModalButton?.addEventListener("click", () => {
      dialog?.close();
    });

	dialog?.close();
  });
  async function shortenUrl(url: string): Promise<{ shortUrl: string }> {
    return await fetch(`${SHORTENER_URL_BASE}/shorten`, {
      method: "POST",
      body: JSON.stringify({ url: url }),
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then((response) => response.json())
      .then((data) => {
        console.log("Response:", data);
        if (data.error) {
          console.error(`Error: ${data.error}`);
          throw new Error(data.error);
        } else {
          console.log(`${window.location.origin}/${data.shortKey}`);
          return { shortUrl: `https://smol.reibal.dev/${data.shortKey}` };
        }
      })
      .catch((error) => {
        console.error("Error:", error);
        throw new Error(error);
      });
  }
</script>

<style>
  #shortener-form {
    background-color: white;
    border-radius: 8px;
    box-shadow: 2px 2px 4px #3337;
    padding: 1rem 1.15rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.75rem;
    max-width: 90%;
    width: 800px;
  }

  input {
    height: 100%;
    width: 100%;
    padding: 0.4em 0.5em;
    font-size: 1.25em;
    border: 2px solid #ccc;
    border-radius: 4px;
    &::placeholder {
      color: #999;
    }
  }
  .shorten-submit-button {
    width: 100%;
    height: 100%;
    padding: 0.5rem;
    font-size: 1.25rem;
    &:hover {
      opacity: 0.95;
    }
  }

  #success-modal {
    border: none;
    border-radius: 8px;
    box-shadow: 2px 2px 4px #3337;
    padding: 1rem 1.15rem;
	text-align: center;

    &::backdrop {
      background-color: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(5px);
    }

    & h3 {
      font-size: 1.5em;
      margin: 0;
    }

    & p {
      font-size: 1em;
      margin: 0;
      padding: 0 1em;
    }

    & .modal-close {
      font-size: 1.2em;
      width: 100%;
	  margin-top: 1rem;
    }
  }

  @media (min-width: 768px) {
    #shortener-form {
      flex-direction: row;
    }
    input {
      flex-grow: 1;
    }
    .shorten-submit-button {
      width: 200px;
    }
  }
</style>
